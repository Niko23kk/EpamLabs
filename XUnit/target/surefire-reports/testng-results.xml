<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="31" passed="31">
  <reporter-output>
  </reporter-output>
  <suite name="Tests" duration-ms="279" started-at="2020-11-19T17:35:43 MSK" finished-at="2020-11-19T17:35:43 MSK">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="279" started-at="2020-11-19T17:35:43 MSK" finished-at="2020-11-19T17:35:43 MSK">
      <class name="Tests">
        <test-method status="PASS" signature="CtanValueTest(double)[pri:0, instance:Tests@4883b407]" name="CtanValueTest" duration-ms="222" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CtanValueTest -->
        <test-method status="PASS" signature="CtanValueTest(double)[pri:0, instance:Tests@4883b407]" name="CtanValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CtanValueTest -->
        <test-method status="PASS" signature="DifferenceOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DifferenceOfTwoValuesTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DifferenceOfTwoValuesTest -->
        <test-method status="PASS" signature="DifferenceOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DifferenceOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DifferenceOfTwoValuesTest -->
        <test-method status="PASS" signature="DifferenceOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DifferenceOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DifferenceOfTwoValuesTest -->
        <test-method status="PASS" signature="DifferenceOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DifferenceOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0E-7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1231231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DifferenceOfTwoValuesTest -->
        <test-method status="PASS" signature="DifferenceOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DifferenceOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DifferenceOfTwoValuesTest -->
        <test-method status="PASS" signature="DivisionOfTwoPositiveValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DivisionOfTwoPositiveValuesTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivisionOfTwoPositiveValuesTest -->
        <test-method status="PASS" signature="DivideByZeroTest()[pri:0, instance:Tests@4883b407]" name="DivideByZeroTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" finished-at="2020-11-19T17:35:43 MSK">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Can't be divided by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Can't be divided by zero
at Calculator.MathMethods.divisionOfTwoValues(MathMethods.java:18)
at Tests.DivideByZeroTest(Tests.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:110)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivideByZeroTest -->
        <test-method status="PASS" signature="DivisionOfTwoPositiveValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DivisionOfTwoPositiveValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivisionOfTwoPositiveValuesTest -->
        <test-method status="PASS" signature="DivisionOfTwoPositiveValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DivisionOfTwoPositiveValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivisionOfTwoPositiveValuesTest -->
        <test-method status="PASS" signature="DivisionOfTwoPositiveValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DivisionOfTwoPositiveValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivisionOfTwoPositiveValuesTest -->
        <test-method status="PASS" signature="DivisionOfTwoPositiveValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="DivisionOfTwoPositiveValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0E-7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1231231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DivisionOfTwoPositiveValuesTest -->
        <test-method status="PASS" signature="ModuloOfTwoValuesTest()[pri:0, instance:Tests@4883b407]" name="ModuloOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" finished-at="2020-11-19T17:35:43 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ModuloOfTwoValuesTest -->
        <test-method status="PASS" signature="MultiplyTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="MultiplyTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyTwoValuesTest -->
        <test-method status="PASS" signature="MultiplyTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="MultiplyTwoValuesTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyTwoValuesTest -->
        <test-method status="PASS" signature="MultiplyTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="MultiplyTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyTwoValuesTest -->
        <test-method status="PASS" signature="MultiplyTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="MultiplyTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0E-7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1231231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyTwoValuesTest -->
        <test-method status="PASS" signature="MultiplyTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="MultiplyTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultiplyTwoValuesTest -->
        <test-method status="PASS" signature="SinValueTest(double)[pri:0, instance:Tests@4883b407]" name="SinValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SinValueTest -->
        <test-method status="PASS" signature="SinValueTest(double)[pri:0, instance:Tests@4883b407]" name="SinValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SinValueTest -->
        <test-method status="PASS" signature="SumOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="SumOfTwoValuesTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5.001]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SumOfTwoValuesTest -->
        <test-method status="PASS" signature="SquaringOfNegativeValueTest()[pri:0, instance:Tests@4883b407]" name="SquaringOfNegativeValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" finished-at="2020-11-19T17:35:43 MSK">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SquaringOfNegativeValueTest -->
        <test-method status="PASS" signature="SumOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="SumOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-5.02]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SumOfTwoValuesTest -->
        <test-method status="PASS" signature="SumOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="SumOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[23456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SumOfTwoValuesTest -->
        <test-method status="PASS" signature="SumOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="SumOfTwoValuesTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[0.123]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-0.123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SumOfTwoValuesTest -->
        <test-method status="PASS" signature="SumOfTwoValuesTest(double, double)[pri:0, instance:Tests@4883b407]" name="SumOfTwoValuesTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="DataTwoValuesTest" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[1.0E-7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0.1231231]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SumOfTwoValuesTest -->
        <test-method status="PASS" signature="TanValueTest(double)[pri:0, instance:Tests@4883b407]" name="TanValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TanValueTest -->
        <test-method status="PASS" signature="TanValueTest(double)[pri:0, instance:Tests@4883b407]" name="TanValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TanValueTest -->
        <test-method status="PASS" signature="РЎosValueTest(double)[pri:0, instance:Tests@4883b407]" name="РЎosValueTest" duration-ms="0" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- РЎosValueTest -->
        <test-method status="PASS" signature="РЎosValueTest(double)[pri:0, instance:Tests@4883b407]" name="РЎosValueTest" duration-ms="1" started-at="2020-11-19T17:35:43 MSK" data-provider="TrigonometryOperationData" finished-at="2020-11-19T17:35:43 MSK">
          <params>
            <param index="0">
              <value>
                <![CDATA[-0.6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- РЎosValueTest -->
      </class> <!-- Tests -->
    </test> <!-- Command line test -->
  </suite> <!-- Tests -->
</testng-results>
